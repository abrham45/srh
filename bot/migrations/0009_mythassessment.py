# Generated by Django 5.2.4 on 2025-08-12 21:19

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bot', '0008_riskassessment'),
    ]

    operations = [
        migrations.CreateModel(
            name='MythAssessment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('myth_type', models.CharField(choices=[('CULTURAL_HYMEN', 'Hymen/Virginity Myths'), ('CULTURAL_MENSTRUATION', 'Menstrual Cultural Myths'), ('CULTURAL_FERTILITY', 'Fertility/Infertility Myths'), ('CULTURAL_PREGNANCY', 'Pregnancy Cultural Beliefs'), ('CULTURAL_CONTRACEPTION', 'Contraception Cultural Myths'), ('MEDICAL_CONTRACEPTION', 'Contraception Medical Misconceptions'), ('MEDICAL_STI', 'STI/HIV Medical Misconceptions'), ('MEDICAL_PREGNANCY', 'Pregnancy Medical Misconceptions'), ('MEDICAL_ANATOMY', 'Anatomy/Biology Misconceptions'), ('MEDICAL_PUBERTY', 'Puberty Medical Misconceptions'), ('MEDICAL_MENSTRUATION', 'Menstruation Medical Misconceptions'), ('NO_MYTH', 'No Myth Detected')], help_text='The type of myth or misconception detected', max_length=32)),
                ('confidence_score', models.FloatField(blank=True, help_text='AI confidence in myth detection (0-1)', null=True)),
                ('myth_detected', models.BooleanField(default=False, help_text='Whether any myth/misconception was detected')),
                ('specific_myth', models.TextField(blank=True, help_text='Description of the specific myth detected', null=True)),
                ('correction_provided', models.BooleanField(default=False, help_text='Whether correction was provided in response')),
                ('severity_level', models.CharField(blank=True, choices=[('LOW', 'Low Impact'), ('MEDIUM', 'Medium Impact'), ('HIGH', 'High Impact'), ('CRITICAL', 'Critical - Potentially Dangerous')], help_text='Severity of the misinformation impact', max_length=16, null=True)),
                ('analysis_context', models.JSONField(blank=True, help_text='Context data used for myth detection', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='myth_assessments', to='bot.chatmessage')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='myth_assessments', to='bot.usersession')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['session', '-created_at'], name='bot_mythass_session_cd7d18_idx'), models.Index(fields=['myth_type'], name='bot_mythass_myth_ty_8e1cf9_idx'), models.Index(fields=['myth_detected'], name='bot_mythass_myth_de_09b21d_idx'), models.Index(fields=['severity_level'], name='bot_mythass_severit_b43c82_idx')],
            },
        ),
    ]
