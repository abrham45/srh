version: '3.8'

services:
  # SRH Chatbot Web Service
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    image: srh-chatbot:latest
    container_name: srh-chatbot-web
    env_file:
      - .env.production
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./backups:/app/backups
    ports:
      - "8000:8000"
    restart: unless-stopped
    command: python manage.py run_telegram_bot
    # Connecting to external PostgreSQL server at 164.92.98.189
    # No extra_hosts needed for external IP
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--deploy"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    depends_on:
      - redis
    networks:
      - srh-network

  # Redis for caching and session storage (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: srh-chatbot-redis
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - srh-network

  # Nginx reverse proxy (optional - for webhook mode)
  nginx:
    image: nginx:alpine
    container_name: srh-chatbot-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    restart: unless-stopped
    depends_on:
      - web
    networks:
      - srh-network
    profiles:
      - nginx  # Only start with: docker-compose --profile nginx up

  # Database backup service (runs daily)
  backup:
    image: postgres:15-alpine
    container_name: srh-chatbot-backup
    volumes:
      - ./backups:/backups
      - ./scripts:/scripts:ro
    environment:
      - PGPASSWORD=${DB_PASSWORD}
    command: |
      sh -c '
      while true; do
        echo "Waiting for next backup cycle..."
        sleep 86400  # 24 hours
        echo "Starting database backup..."
        pg_dump -h ${DB_HOST} -U ${DB_USER} -d ${DB_NAME} > /backups/srh_chatbot_$$(date +%Y%m%d_%H%M%S).sql
        echo "Backup completed: $$(date)"
        # Keep only last 7 days of backups
        find /backups -name "*.sql" -mtime +7 -delete
      done'
    restart: unless-stopped
    # Connecting to external PostgreSQL server at 164.92.98.189
    networks:
      - srh-network
    profiles:
      - backup  # Only start with: docker-compose --profile backup up

volumes:
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  srh-network:
    driver: bridge
